{"2019/11/07": {"quote": "Don't worry about what anybody else is going to do. The best way to Don't worry about what anybody else is going to do. The best way to predict the future is to invent it. -- Alan Kay\n"}, "2019/11/08": {"quote": " Premature optimization is the root of all evil (or at least most of it) in programming. -- Donald Knuth\n"}, "2019/11/09": {"quote": " Lisp has jokingly been called \"the most intelligent way to misuse a computer\". I think that description is a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts. -- Edsger Dijkstra, CACM, 15:10\n"}, "2019/11/10": {"quote": " Keep away from people who try to belittle your ambitions. Small people always do that, but the really great make you feel that you, too, can become great. -- Mark Twain\n"}, "2019/11/11": {"quote": " What Paul does, and does very well, is to take ideas and concepts that are beautiful in the abstract, and brings them down to a real world level. That's a rare talent to find in writing these days. -- Jeff \"hemos\" Bates, Director, OSDN; Co-evolver, Slashdot\n"}, "2019/11/12": {"quote": " Since programmers create programs out of nothing, imagination is our only limitation. Thus, in the world of programming, the hero is the one who has great vision. Paul Graham is one of our contemporary heroes. He has the ability to embrace the vision, and to express it plainly. His works are my favorites, especially the ones describing language design. He explains secrets of programming, languages, and human nature that can only be learned from the hacker experience. This book shows you his great vision, and tells you the truth about the nature of hacking. -- Yukihiro \"Matz\" Matsumoto, creator of Ruby\n"}, "2019/11/13": {"quote": " To follow the path:     look to the master,     follow the master,     walk with the master,     see through the master,     become the master. -- Modern zen Poem\n"}, "2019/11/14": {"quote": " No problem should ever have to be solved twice. -- Eric S. Raymond, How to become a hacker\n"}, "2019/11/15": {"quote": " Attitude is no substitute for competence. -- Eric S. Raymond, How to become a hacker\n"}, "2019/11/16": {"quote": " It is said that the real winner is the one who lives in today but able to see tomorrow. -- Juan Meng, Reviewing \"The future of ideas\" by Lawrence Lessig\n"}, "2019/11/17": {"quote": " Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it. -- Alan J. Perlis (Epigrams in programming)\n"}, "2019/11/18": {"quote": " A year spent in artificial intelligence is enough to make one believe in God. -- Alan J. Perlis (Epigrams in programming)\n"}, "2019/11/19": {"quote": " Dealing with failure is easy: Work hard to improve. Success is also easy to handle: You've solved the wrong problem. Work hard to improve. -- Alan J. Perlis (Epigrams in programmi ng)\n"}, "2019/11/20": {"quote": " Within a computer natural language is unnatural. -- Alan J. Perlis (Epigrams in programming)\n"}, "2019/11/21": {"quote": " You think you know when you learn, are more sure when you can write, even more when you can teach, but certain when you can program. -- Alan J. Perlis (Epigrams in programming)\n"}, "2019/11/22": {"quote": " Adapting old programs to fit new machines usually means adapting new machines to behave like old ones. -- Alan J. Perlis (Epigrams in programming)\n"}, "2019/11/23": {"quote": " A little learning is a dangerous thing. -- Alexander Pope\n"}, "2019/11/24": {"quote": " Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter. -- Eric Raymond\n"}, "2019/11/25": {"quote": " Einstein argued that there must be simplified explanations of nature, because God is not capricious or arbitrary. -- Frederick P. Brooks, No Sliver Bullet.\n"}, "2019/11/26": {"quote": " Students should be evaluated on how well they can achieve the goals they strived to achieve within a realistic context. Students need to learn to do things, not know things. -- Roger Schank, Engines for Education\n"}, "2019/11/27": {"quote": " We remember what we learn when we care about performing better and when we believe that what we have been asked to do is representative of reality. -- Roger Schank, Engines for Education\n"}, "2019/11/28": {"quote": " There really is no learning without doing. -- Roger Schank, Engines for Education\n"}, "2019/11/29": {"quote": " We really have to get over the idea that some stuff is just worth knowing even if you never do anything with it. Human memories happily erase stuff that has no purpose, so why try to fill up children's heads with such stuff? -- Roger Schank, Engines for Education\n"}, "2019/11/30": {"quote": " La tactique, c'est ce que vous faites quand il y a quelque chose \u00e0 faire; la strat\u00e9gie, c'est ce que vous faites quand il n'y a rien \u00e0 faire. -- Xavier Tartacover\n"}, "2019/12/01": {"quote": " The only problems we can really solve in a satisfactory manner are those that finally admit a nicely factored solution. -- E. W. Dijkstra, The humble programmer\n"}, "2019/12/02": {"quote": " The best way to learn to live with our limitations is to know them. --E. W. Dijkstra, The humble programmer\n"}, "2019/12/03": {"quote": " This challenge, viz. the confrontation with the programming task, is so unique that this novel experience can teach us a lot about ourselves. It should deepen our understanding of the processes of design and creation, it should give us better control over the task of organizing our thoughts. If it did not do so, to my taste we should no deserve the computer at all!  It has allready taught us a few lessons, and the one I have chosen to stress in this talk is the following. We shall do a much better programming job, provided that we approach the task with a full appreciation of its tremenduous difficulty, provided that we stick to modest and elegant programming languages, provided that we respect the intrinsec limitations of the human mind and approach the task as Very Humble Programmers. -- E. W. Dijkstra, The humble programmer\n"}, "2019/12/04": {"quote": " Ce n'est que par les relations qu'on entretient entre nos diff\u00e9rentes connaissances qu'elles nous restent accessibles. -- Shnuup, sur l'hypertexte (SELFHTML -> Introduction -> Definitions sur l'hypertexte)\n"}, "2019/12/05": {"quote": " We now come to the decisive step of mathematical abstraction: we forget about what the symbols stand for. ...[The mathematician] need not be idle; there are many operations which he may carry out with these symbols, without ever having to look at the things they stand for. -- Hermann Weyl, The Mathematical Way of Thinking\n"}, "2019/12/06": {"quote": " An expert is, according to my working definition \"someone who doesn't need to look up answers to easy questions\". -- Eric Lippert.\n"}, "2019/12/07": {"quote": " The programmer must seek both perfection of part and adequacy of collection. -- Alan J. Perlis\n"}, "2019/12/08": {"quote": " Thus, programs must be written for people to read, and only incidentally for machines to execute. -- Alan J. Perlis\n"}, "2019/12/09": {"quote": " We control complexity by building abstractions that hide details when appropriate. We control complexity by establishing conventional interfaces that enable us to construct systems by combining standard, well-understood pieces in a ``mix and match'' way. We control complexity by establishing new languages for describing a design, each of which emphasizes particular aspects of the design and deemphasizes others. -- Alan J. Perlis\n"}, "2019/12/10": {"quote": " The acts of the mind, wherein it exerts its power over simple ideas, are chiefly these three: 1. Combining several simple ideas into one compound one, and thus all complex ideas are made. 2. The second is bringing two ideas, whether simple or complex, together, and setting them by one another so as to take a view of them at once, without uniting them into one, by which it gets all its ideas of relations. 3. The third is separating them from all other ideas that accompany them in their real existence: this is called abstraction, and thus all its general ideas are made. -- John Locke, An Essay Concerning Human Understanding (1690)\n"}, "2019/12/11": {"quote": " Lisp programmers know the value of everything but the cost of nothing. -- Alan J. Perlis\n"}, "2019/12/12": {"quote": " An interpreter raises the machine to the level of the user program; a compiler lowers the user program to the level of the machine language. -- SICP\n"}, "2019/12/13": {"quote": " Everything should be made as simple as possible, but no simpler. -- Albert Einstein\n"}, "2019/12/14": {"quote": " The great dividing line between success and failure can be expressed in five words: \"I did not have time.\" -- WestHost weekly newsletter 14 Feb 2003\n"}, "2019/12/15": {"quote": " When your enemy is making a very serious mistake, don't be impolite and disturb him. -- Napoleon Bonaparte (allegedly)\n"}, "2019/12/16": {"quote": " A charlatan makes obscure what is clear; a thinker makes clear what is obscure. -- Hugh Kingsmill\n"}, "2019/12/17": {"quote": " There are two ways of constructing a software design; one way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult. -- C. A. R. Hoare\n"}, "2019/12/18": {"quote": " And if you go too far up, abstraction-wise, you run out of oxygen. Sometimes smart thinkers just don't know when to stop, and they create these absurd, all-encompassing, high-level pictures of the universe that are all good and fine, but don't actually mean anything at all. -- Joel Spolsky\n"}, "2019/12/19": {"quote": " The three chief virtues of a programmer are: Laziness, Impatience and Hubris. -- Larry Wall (Programming Perl)\n"}, "2019/12/20": {"quote": " All non-trivial abstractions, to some degree, are leaky. -- Joel Spolsky (The Law of Leaky Abstractions)\n"}, "2019/12/21": {"quote": " XML wasn't designed to be edited by humans on a regular basis. -- Guido van Rossum\n"}, "2019/12/22": {"quote": " Premature abstraction is an equally grevious sin as premature optimization. -- Keith Devens\n"}, "2019/12/23": {"quote": " You can have premature generalization as well as premature optimization. -- Bjarne Stroustrup\n"}, "2019/12/24": {"quote": " He causes his sun to rise on the evil and the good, and sends rain on the righteous and the unrighteous. -- Matthew 5:45\n"}, "2019/12/25": {"quote": " A language that doesn't affect the way you think about programming, is not worth knowing. -- Alan Perlis\n"}, "2019/12/26": {"quote": " Je n'ai fait celle-ci plus longue que parce que je n'ai pas eu le loisir de la faire plus courte. (I have made this letter so long only because I did not have the leisure to make it shorter.) -- Blaise Pascal (Lettres Provinciales)\n"}, "2019/12/27": {"quote": " Men never do evil so completely and cheerfully as when they do it from religious conviction. -- Blaise Pascal (attributed)\n"}, "2019/12/28": {"quote": " Everybody makes their own fun. If you don't make it yourself, it ain't fun -- it's entertainment. -- David Mamet (as relayed by Joss Whedon)\n"}, "2019/12/29": {"quote": " If we wish to count lines of code, we should not regard them as *lines produced* but as *lines spent*. -- Edsger Dijkstra\n"}, "2019/12/30": {"quote": " Sometimes a man with too broad a perspective reveals himself as having no real perspective at all. A man who tries too hard to see every side may be a man who is trying to avoid choosing any side. A man who tries too hard to seek a deeper truth may be trying to hide from the truth he already knows.  That is not a sign of intellectual sophistication and \"great thinking\". It is a demonstration of moral degeneracy and cowardice. -- Steven Den Beste\n"}, "2019/12/31": {"quote": " Omit needless words. -- William Strunk, Jr. (The Elements of Style)\n"}, "2020/01/01": {"quote": " I have never met a man so ignorant that I couldn't learn something from him. -- Galileo Galilei\n"}, "2020/01/02": {"quote": " A society that puts equality -- in the sense of equality of outcome -- ahead of freedom will end up with neither equality nor freedom. The use of force to achieve equality will destroy freedom, and the force, introduced for good purposes, will end up in the hands of people who use it to promote their own interests. -- Milton Friedman (Thomas Sowell: A Conflict of Visions, p130)\n"}, "2020/01/03": {"quote": " Philosophy: the finding of bad reasons for what one believes by instinct. -- Brave New World (paraphrased)\n"}, "2020/01/04": {"quote": " Of all tyrannies a tyranny sincerely exercised for the good of its victims may be the most oppressive. It may be better to live under robber barons than under omnipotent moral busybodies, The robber baron's cruelty may sometimes sleep, his cupidity may at some point be satiated; but those who torment us for own good will torment us without end, for they do so with the approval of their own conscience. -- C.S. Lewis\n"}, "2020/01/05": {"quote": " Fools! Don't they know that tears are a woman's most effective weapon? -- Catwoman (The Batman TV Series, episode 83)\n"}, "2020/01/06": {"quote": " It's like a condom; I'd rather have it and not need it than need it and not have it. -- some chick in Alien vs. Predator, when asked why she\n"}, "2020/01/07": {"quote": " always carries a gun  C++ is history repeated as tragedy. Java is history repeated as farce. -- Scott McKay\n"}, "2020/01/08": {"quote": " Simplicity takes effort-- genius, even. -- Paul Graham\n"}, "2020/01/09": {"quote": " Show, don't tell. -- unknown\n"}, "2020/01/10": {"quote": " In God I trust; I will not be afraid. What can mortal man do to me? -- David (Psalm 56:4)\n"}, "2020/01/11": {"quote": " Linux is only free if your time has no value. -- Jamie Zawinski\n"}, "2020/01/12": {"quote": " Code is poetry. -- wordpress.org\n"}, "2020/01/13": {"quote": " If you choose not to decide, you still have made a choice. -- Rush (Freewill)\n"}, "2020/01/14": {"quote": " Civilization advances by extending the number of important operations which we can perform without thinking about them. -- Alfred North Whitehead (Introduction to Mathematics)\n"}, "2020/01/15": {"quote": " The function of wisdom is to discriminate between good and evil. -- Cicero\n"}, "2020/01/16": {"quote": " The reason to do animation is caricature. Good caricature picks out the essense of the statement and removes everything else. It's not simply about reproducing reality; It's about bumping it up. -- Brad Bird, writer and director, The Incredibles\n"}, "2020/01/17": {"quote": " Mistakes were made. -- Ronald Reagan\n"}, "2020/01/18": {"quote": " I would rather be an optimist and be wrong than a pessimist who proves to be right. The former sometimes wins, but never the latter. -- \"Hoots\"\n"}, "2020/01/19": {"quote": " What is truth? -- Pontius Pilate\n"}, "2020/01/20": {"quote": " Life moves pretty fast. If you don't stop and look around once in a while, you could miss it. -- Ferris Bueller\n"}, "2020/01/21": {"quote": " Lisp is worth learning for the profound enlightenment experience you will have when you finally get it; that experience will make you a better programmer for the rest of your days, even if you never actually use Lisp itself a lot. -- Eric S. Raymond\n"}, "2020/01/22": {"quote": " Any sufficiently complicated C or Fortran program contains an ad hoc, informally specified, bug-ridden, slow implementation of half of Common Lisp. -- Philip Greenspun (Greenspun's Tenth Rule)\n"}, "2020/01/23": {"quote": " I was talking recently to a friend who teaches at MIT. His field is hot now and every year he is inundated by applications from would-be graduate students. \"A lot of them seem smart,\" he said. \"What I can't tell is whether they have any kind of taste.\" -- Paul Graham\n"}, "2020/01/24": {"quote": " The direct pursuit of happiness is a recipe for an unhappy life. -- Donald Campbell\n"}, "2020/01/25": {"quote": " It's no trick for talented people to be interesting, but it's a gift to be interested. We want an organization filled with interested people. -- Randy S. Nelson (dean of Pixar University)\n"}, "2020/01/26": {"quote": " Why teach drawing to accountants? Because drawing class doesn't just teach people to draw. It teaches them to be more observant. There's no company on earth that wouldn't benefit from having people become more observant. -- Randy S. Nelson (dean of Pixar University)\n"}, "2020/01/27": {"quote": " All problems in computer science can be solved by another level of indirection. -- Butler Lampson\n"}, "2020/01/28": {"quote": " A designer knows he has arrived at perfection not when there is no longuer anything to add, but when there is no longuer anything to take away. -- Antoine de St Exupery.\n"}, "2020/01/29": {"quote": " For the things we have to learn before we can do them, we learn by doing them. -- Aristotle.\n"}, "2020/01/30": {"quote": " There are many ways to avoid success in life, but the most sure-fire just might be procrastination. -- Hara Estroff Marano.\n"}, "2020/01/31": {"quote": " PI seconds is a nanocentury. -- [fact]\n"}, "2020/02/01": {"quote": " A non negative binary integer value x is a power of 2 iff (x & (x-1)) is 0 using 2's complement arithmetic. -- [fact]\n"}, "2020/02/02": {"quote": " While I\u2019ve always appreciated beautiful code, I share Jonathan\u2019s concern about studying it too much. I think studying beauty in music and painting has led us to modern classical music and painting that the majority of us just don\u2019t get. Beauty can be seen when it emerges, but isn\u2019t something to strive for in isolation of a larger context. In the software world, the larger context would be the utility of the software to the end user. -- [A comment on a blog]\n"}, "2020/02/03": {"quote": " Dont give users the opportunity to lock themselves. -- unknown\n"}, "2020/02/04": {"quote": " Any fool can make the simple complex, only a smart person can make the complex simple. -- unknown\n"}, "2020/02/05": {"quote": " To do something well you have to love it. So to the extent you can preserve hacking as something you love, you're likely to do it well. Try to keep the sense of wonder you had about programming at age 14. If you're worried that your current job is rotting your brain, it probably is. -- Paul Graham.\n"}, "2020/02/06": {"quote": " What I didn't understand was that the value of some new acquisition wasn't the difference between its retail price and what I paid for it. It was the value I derived from it. Stuff is an extremely illiquid asset. Unless you have some plan for selling that valuable thing you got so cheaply, what difference does it make what it's \"worth?\" The only way you're ever going to extract any value from it is to use it. And if you don't have any immediate use for it, you probably never will. -- Paul Graham\n"}, "2020/02/07": {"quote": " Only bad designers blame their failings on the users. -- unknown\n"}, "2020/02/08": {"quote": " Humans aren't rational -- they rationalize. And I don't just mean \"some of them\" or \"other people\". I'm talking about everyone. We have a \"logic engine\" in our brains, but for the most part, it's not the one in the driver's seat -- instead it operates after the fact, generating rationalizations and excuses for our behavior. -- Paul Buchheit\n"}, "2020/02/09": {"quote": " What do Americans look for in a car? I've heard many answers when I've asked this question. The answers include excellent safety ratings, great gas mileage, handling, and cornering ability, among others. I don't believe any of these. That's because the first principle of the Culture Code is that the only effective way to understand what people truly mean is to ignore what they say. This is not to suggest that people intentionally lie or misrepresent themselves. What it means is that, when asked direct questions about their interests and preferences, people tend to give answers they believe the questioner wants to hear. Again, this is not because they intend to mislead. It is because people respond to these questions with their cortexes, the parts of their brains that control intelligence rather than emotion or instinct. They ponder a question, they process a question, and when they deliver an answer, it is the product of deliberation. They believe they are telling the truth. A lie detector would confirm this. In most cases, however, they aren't saying what they mean. -- The culture code.\n"}, "2020/02/10": {"quote": " When all you have is a hammer, everything looks like a nail. -- unknown\n"}, "2020/02/11": {"quote": " Good coders code, great reuse. -- http://www.catonmat.net\n"}, "2020/02/12": {"quote": " The lesson of the story might appear to be that self-interested and ambitious people in power are often the cause of wastefulness in developing countries. But self-interested and ambitious people are in positions of power, great and small, all over the world. In many places, they are restrained by the law, the press, and democratic opposition. Cameroon's tragedy is that there is nothing to hold self-interest in check. -- Tim Harford\n"}, "2020/02/13": {"quote": " To solve your problems you must learn new skills, adapt new thought patterns, and become a different person than you were before that problem.  God has crafted you for success. In the middle of every adversity lie your best opportunities. Discover it, build upon it and move forward in your journey to live an extraordinary life.  You owe it to yourself to live a great life. Don\u2019t let negative thoughts pull you down. Be grateful and open to learn and grow. -- http://secretsofstudying.com/\n"}, "2020/02/14": {"quote": " If there is a will, there is a way. -- unknown\n"}, "2020/02/15": {"quote": " Having large case statements in an object-oriented language is a sure sign your design is flawed. -- [Fixing architecture flaws in Rails' ORM]\n"}, "2020/02/16": {"quote": " Being a programmer is the same way. The only way to be a good programmer is to write code. When you realize you haven't been writing much code lately, and it seems like all you do is brag about code you wrote in the past, and people start looking at you funny while you're shooting your mouth off, realize it's because they know. They might not even know they know, but they know. So, yes, doing what you love brings success, and by all means, throw yourself a nice big party, buy yourself a nice car, soak up the adulation of an adoring crowd. Then shut the fuck up and get back to work. -- Sincerity Theory\n"}, "2020/02/17": {"quote": " Another feature about this guy is his low threshold of boredom. He'll pick up on a task and work frantically at it, accomplishing wonders in a short time and then get bored and drop it before its properly finished. He'll do nothing but strum his guitar and lie around in bed for several days after.  Thats also part of the pattern too; periods of frenetic activity followed by periods of melancholia, withdrawal and inactivity. This is a bipolar personality. -- The bipolar lisp programmer\n"}, "2020/02/18": {"quote": " My dream is that people adopt it on its own merits. We're not trying to bend Ruby on Rails to fit the enterprise, we're encouraging enterprises to bend to Ruby on Rails. Come if you like it, stay away if you don't. We're not going head over heels to accommodate the enterprise or to lure them away from Java. That's how you end up with Java, if you start bending to special interest groups. -- David Heinemeier Hansson (Ruby On Rails' creator)\n"}, "2020/02/19": {"quote": " New eyes have X-ray vision.  [someone that hasn't written it is more likely to spot the bug. \"someone\" can be you after a break] -- William S. Annis\n"}, "2020/02/20": {"quote": " So - what are the most important problems in software engineering? I\u2019d answer \u201cdealing with complexity\u201d. -- Mark Chu-Carroll\n"}, "2020/02/21": {"quote": " So the mere constraint of staying in regular contact with us will push you to make things happen, because otherwise you'll be embarrassed to tell us that you haven't done anything new since the last time we talked. -- Paul Graham (a talk at Y Combinator, for startup creators).\n"}, "2020/02/22": {"quote": " The choice of the university is mostly important for the piece of paper you get at the end. The education you get depends on you. -- Andreas Zwinkau\n"}, "2020/02/23": {"quote": " Remember that you are humans in the first place and only after that programmers. -- Alexandru Vancea\n"}, "2020/02/24": {"quote": " Humans differ from animals to the degree that they are not merely an end result of their conditioning, but are able to reflect on their experiences and strategies, and apply insight to make changes in the way they live to modify the outcome. -- SlideTrombone (comment on \"Programming can ruin your life\")\n"}, "2020/02/25": {"quote": " As builders and creators finding the perfect solution should not be our main goal. We should find the perfect problem. -- Isaac (blog comment)\n"}, "2020/02/26": {"quote": " Just like carpentry, measure twice cut once. -- Super-sizing YouTube with Python (Mike Solomon, mike@youtube.com)\n"}, "2020/02/27": {"quote": " The good thing about reinventing the wheel is that you get a round one. -- Douglas Crockford (Author of JSON and JsLint)\n"}, "2020/02/28": {"quote": " I feel it is everybodies obligation to reach for the best in themselves and use that for the interest of mankind. -- Corneluis (comment on 'Are you going to change the world? (Really?)')\n"}, "2020/02/29": {"quote": " Abstraction is a form of data compression: absolutely necessary, because human short-term memory is so small, but the critically important aspect of abstraction is the algorithm that gets you from the name back to the \"uncompressed\" details. -- Bruce Wilder (blog post comment)\n"}, "2020/03/01": {"quote": " Have you ever noticed that when you sit down to write something, half the ideas that end up in it are ones you thought of while writing it? The same thing happens with software. Working to implement one idea gives you more ideas. -- Paul Graham, The other road ahead.\n"}, "2020/03/02": {"quote": " In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation. -- SICP, What is meant by data?\n"}, "2020/03/03": {"quote": " Resume writing is just like dating, or applying for a bank loan, in that nobody wants you if you're desperate. -- Steve Yegge.\n"}, "2020/03/04": {"quote": " Mastering isn\u2019t a survival instinct; it\u2019s an urge to excel. Mastering is one of the experiences that delineates us from animals. It is striving to be more tomorrow than we are today; to perfectly pitch the ball over home plate; to craft the perfect sentence in an article; to open the oven and feel the warm, richly-scented cloud telling you dinner is going to be absolutely extraordinary. We humans crave perfection, to be masters of our domain, to distinguish ourselves by sheer skill and prowess. -- Joesgoals.com\n"}, "2020/03/05": {"quote": " It(mastering)\u2019s knowing what you are doing. -- Joesgoals.com\n"}, "2020/03/06": {"quote": " Well then. How could you possibly live without automated refactoring tools? How else could you coordinate the caterpillar-like motions of all Java\u2019s identical tiny legs, its thousands of similar parts? I\u2019ll tell you how: Ruby is a butterfly. -- Stevey, Refactoring Trilogy, Part 1.\n"}, "2020/03/07": {"quote": " You will never become a Great Programmer until you acknowledge that you will always be a Terrible Programmer. You will remain a Great Programmer for only as long as you acknowledge that you are still a Terrible Programmer. -- Marc (http://kickin-the-darkness.blogspot.com/)\n"}, "2020/03/08": {"quote": " If I tell you I'm good, you would probably think I'm boasting. If I tell you I'm no good, you know I'm lying. -- Bruce Lee\n"}, "2020/03/09": {"quote": " Let me try to get this straight: Lisp is a language for describing algorithms. This was JohnMcCarthy's original purpose, anyway: to build something more convenient than a Turing machine. Lisp is not about file, socket or GUI programming - Lisp is about expressive power. (For example, you can design multiple object systems for Lisp, in Lisp. Or implement the now-fashionable AOP. Or do arbitrary transformations on parsed source code.) If you don't value expressive power, Lisp ain't for you. I, personally, would prefer Lisp to not become mainstream: this would necessarily involve a dumbing down. -- VladimirSlepnev\n"}, "2020/03/10": {"quote": " Je ne vous impose aucune contrainte, aucune limite. Surprenez-moi, \u00e9tonnez-moi, d\u00e9fiez-moi, d\u00e9fiez-vous vous-m\u00eame. Vous avez le choix: vous pouvez rester dans l'ombre ou en sortir en \u00e9tant parmis les trop rares exceptions \u00e0 avoir r\u00e9ussi. L'heure est venue d'aller bien au del\u00e0 de votre potentiel. L'heure est venue maintenant de descendre vraiment en vous. L'heure est venue de d\u00e9montrer pourquoi vous \u00eates l'\u00e9lite, les quelques \u00e9lus, les rares lueurs qui offrent \u00e0 cette compagnie son caract\u00e8re exceptionnel, sa luminescence. -- Le PDG de NURV, dans \"Anti-trust\".\n"}, "2020/03/11": {"quote": " If something isn\u2019t working, you need to look back and figure out what got you excited in the first place. -- David Gorman (ImThere.com)\n"}, "2020/03/12": {"quote": " Opportunities that present themselves to you are the consequence -- at least partially -- of being in the right place at the right time. They tend to present themselves when you're not expecting it -- and often when you are engaged in other activities that would seem to preclude you from pursuing them. And they come and go quickly -- if you don't jump all over an opportunity, someone else generally will and it will vanish. -- Marc Andreessen (http://blog.pmarca.com/)\n"}, "2020/03/13": {"quote": " Pay attention to opportunity cost at all times. Doing one thing means not doing other things. This is a form of risk that is very easy to ignore, to your detriment. -- Marc Andreessen (http://blog.pmarca.com/)\n"}, "2020/03/14": {"quote": " Seize any opportunity, or anything that looks like opportunity. They are rare, much rarer than you think... -- Nassim Nicholas Taleb, \"The Black Swan\".\n"}, "2020/03/15": {"quote": " I think that a lot of programmers are ignoring an important point when people talk about reducing code repetition on large projects. Part of the idea is that large projects are intrinsically *wrong*. That you should be looking at making a number of smaller projects that are composable, even if you never end up reusing one of those smaller projects elsewhere. -- Dan Nugent\n"}, "2020/03/16": {"quote": " We tend to seek easy, single-factor explanations of success. For most important things, though, success actually requires avoiding many separate causes of failure. -- Jared Diamond\n"}, "2020/03/17": {"quote": " Things which matter most must never be at the mercy of things which matter least. -- Johann Wolfgang Von Goethe (1749-1832)\n"}, "2020/03/18": {"quote": " I think the root of your mistake is saying that macros don't scale to larger groups. The real truth is that macros don't scale to stupider groups. -- Paul Graham, on the Lightweight Languages mailing list.\n"}, "2020/03/19": {"quote": " Argue with idiots, and you become an idiot. If you compete with slaves you become a slave. -- Paul Graham and Norbert Weiner, respectively\n"}, "2020/03/20": {"quote": " Always dive down into a problem and get your hands on the deepest issue behind the problem. All other considerations are to dismissed as \"engineering details\"; they can be sorted out after the basic problem has been solved. -- Chris Crawford\n"}, "2020/03/21": {"quote": " Don't have good ideas if you aren't willing to be responsible for them. -- Alan Perlis\n"}, "2020/03/22": {"quote": " It is impossible to sharpen a pencil with a blunt axe. It is equally vain to try to do it with ten blunt axes instead. -- Edsger Dijkstra\n"}, "2020/03/23": {"quote": " If we wish to count lines of code, we should not regard them as lines produced but as lines spent. -- Edsger Dijkstra\n"}, "2020/03/24": {"quote": " The most damaging phrase in the language is, It's always been done that way. -- Rear Admiral Grace Hopper\n"}, "2020/03/25": {"quote": " Getting back to failing early, I've learned it's important to completely fail. Get fired. Shoot the project, then burn its corpse. Melt the CVS repository and microwave the backup CDs. When things go wrong, I've often tried to play the hero from start to finish. Guess what? Some projects are doomed no matter what. Some need skills I don't possess. And some need a fresh face. -- Reginald Braithwaite\n"}, "2020/03/26": {"quote": " The only thing a man should ever be 100% convinced of is his own ignorance. -- DJ MacLean\n"}, "2020/03/27": {"quote": " The best people and organizations have the attitude of wisdom: The courage to act on what they know right now and the humility to change course when they find better evidence. The quest for management magic and breakthrough ideas is overrated; being a master of the obvious is underrated. Jim Maloney is right: Work is an overrated activity -- Bob Sutton\n"}, "2020/03/28": {"quote": " In theory, there\u2019s no difference between theory and practice. But in practice, there is. -- Albert Einstein\n"}, "2020/03/29": {"quote": " Act from reason, and failure makes you rethink and study harder. Act from faith, and failure makes you blame someone and push harder. --  Erik Naggum\n"}, "2020/03/30": {"quote": " Measure everything you can about the product, and you'll start seeing patterns. -- Max Levchin, PayPal founder, Talk at StartupSchool2007\n"}, "2020/03/31": {"quote": " Quality of the people is better than the quality of the business idea. Crappy people can screw up the best idea in the world. -- Hadi Partovi & Ali Partovi (iLike.com), Talk at StartupSchool2007\n"}, "2020/04/01": {"quote": " The only constant in the world of hi-tech is change. -- Mark Ward\n"}, "2020/04/02": {"quote": " Write it properly first. It's easier to make a correct program fast, than to make a fast program correct. -- http://www.cpax.org.uk/prg/\n"}, "2020/04/03": {"quote": " J'ai toujours pr\u00e9f\u00e9r\u00e9 la folie des passions \u00e0 la sagesse de l'indiff\u00e9rence. -- Anatole France\n"}, "2020/04/04": {"quote": " You can\u2019t get to version 500 if you don\u2019t start with a version 1. -- BetterExplained.com\n"}, "2020/04/05": {"quote": " The wonderful and frustrating thing about understanding yourself is that nobody can do it for you. -- BetterExplained.com\n"}, "2020/04/06": {"quote": " When you have eliminated the impossible, whatever remains, however improbable, must be the truth. -- Sherlock Holmes\n"}, "2020/04/07": {"quote": " In order to understand what another person is saying, you must assume that it is true and try to find out what it could be true of. -- George Miller\n"}, "2020/04/08": {"quote": " A journey of a thousand miles must begin with a single step. -- Lao\u00adTzu\n"}, "2020/04/09": {"quote": " C\u2019s great for what it\u2019s great for. -- Ben Hoyts (micropledge)\n"}, "2020/04/10": {"quote": " There is one meaning [for static in C]: a global variable that is invisible outside the current scope, be it a function or a file. -- Paolo Bonzini\n"}, "2020/04/11": {"quote": " Processors don't get better so that they can have more free time. Processors get better so _you_ can have more free time. -- LeCamarade (freeshells.ch)\n"}, "2020/04/12": {"quote": " The venerable master Qc Na was walking with his student, Anton.  Hoping to prompt the master into a discussion, Anton said \"Master, I have heard that objects are a very good thing - is this true?\"  Qc Na looked pityingly at his student and replied, \"Foolish pupil - objects are merely a poor man's closures.\"     Chastised, Anton took his leave from his master and returned to his cell, intent on studying closures.  He carefully read the entire \"Lambda: The Ultimate...\" series of papers and its cousins, and implemented a small Scheme interpreter with a closure-based object system.  He learned much, and looked forward to informing his master of his progress.     On his next walk with Qc Na, Anton attempted to impress his master by saying \"Master, I have diligently studied the matter, and now understand that objects are truly a poor man's closures.\"  Qc Na responded by hitting Anton with his stick, saying \"When will you learn? Closures are a poor man's object.\"  At that moment, Anton became enlightened. -- Anton van Straaten (Na = Norman Adams, Qa = Christian Queinnec)\n"}, "2020/04/13": {"quote": " Understanding why C++ is the way it is helps a programmer use it well. A deep understanding of a tool is essential for an expert craftsman. -- Bjarne Stroustrap\n"}, "2020/04/14": {"quote": " No art, however minor, demands less than total dedication if you want to excel in it. -- Alberti\n"}, "2020/04/15": {"quote": " The minute you put the blame on someone else you\u2019ve switch things from being a problem you can control to a problem outside of your control. -- engtech (internetducttape.com)\n"}, "2020/04/16": {"quote": " State is the root of all evil. In particular functions with side effects should be avoided. -- OO Sucks (bluetail.com)\n"}, "2020/04/17": {"quote": " Ils ne sont pas forts parce qu'ils sont forts. Ils sont forts parce que nous sommes faibles. -- Ragala Khalid\n"}, "2020/04/18": {"quote": " It is better to be quiet and thought a fool than to open your mouth and remove all doubt. -- WikiHow\n"}, "2020/04/19": {"quote": " A tail call allows a function to return the result of another function without leaving an entry on the stack. Tail recursion is a specific case of tail calling. -- ASPN : Python Cookbook : Explicit Tail Call\n"}, "2020/04/20": {"quote": " Simplicity means the achievement of maximum effect with minimum means. -- Dr. Koichi Kawana\n"}, "2020/04/21": {"quote": " Normality is the route to nowhere. -- Ridderstrale & Nordstorm, Funky Business\n"}, "2020/04/22": {"quote": " The problem is that Microsoft just has no taste. And I don't mean that in a small way, I mean that in a big way. -- Steve Jobs\n"}, "2020/04/23": {"quote": " Do you want to sell sugared water all your life or do you want to change the world? -- Steve Jobs, to John Sculley (former Pepsi executive)\n"}, "2020/04/24": {"quote": " 1 - Creativity and innovation always build on the past. 2 - The past always tries to control the creativity that builds on it. 3 - Free societies enable the future by limiting the past. 4 - Ours is less and less a free society. -- Lawrence Lessig, Free Culture.\n"}, "2020/04/25": {"quote": " Good work is no done by \u2018humble\u2019 men. -- H. Hardy, A mathematician's apology.\n"}, "2020/04/26": {"quote": " Simplicity and pragmatism beat complexity and theory any day. -- Dennis (blog comment)\n"}, "2020/04/27": {"quote": " The proof is by reductio ad absurdum, and reductio ad absurdum, which Euclid loved so much, is one of a mathematician\u2019s finest weapons. It is a far finer gambit than any chess gambit: a chess player may offer the sacrifice of a pawn or even a piece, but a mathematician offers the game. -- G. H. Hardy\n"}, "2020/04/28": {"quote": " Remember, always be yourself ... unless you suck! -- Joss Whedon\n"}, "2020/04/29": {"quote": " All great things require great dedication. -- Chuck Norris(?)\n"}, "2020/04/30": {"quote": " I'm always happy to trade performance for readability as long as the former isn't already scarce. -- Crayz (Commentor on blog.raganwald.com)\n"}, "2020/05/01": {"quote": " You have to write for your audience. I would never write (1..5).map &'*2' in Java when I could write ListFactoryFactory.getListFactoryFromResource(     new ResourceName('com.javax.magnitudes.integers'). setLowerBound(1).setUpperBound(5).setStep(1).applyFunctor(     new Functor () { public void eval (x) { return x * 2; } })) I'm simplifying, of course, I've left out the security and logging wrappers. -- Reginald Braithwait\n"}, "2020/05/02": {"quote": " The definition of insanity is doing the same thing over and over again and expecting different results. -- Benjamin Franklin\n"}, "2020/05/03": {"quote": " A no uttered from the deepest conviction is better than a yes merely uttered to please or what is worse, to avoid trouble. -- Mahatma Gandhi\n"}, "2020/05/04": {"quote": " I think it is wise, and only honest, to warn you that my goal is immodest. It is not my purpose to \"transfer knowledge\" to you that, subsequently, you can forget again. My purpose is no less than to effectuate in each of you a noticeable, irreversable change. I want you to gain, for the rest of your lives, the insight that beautiful proofs are not \"found\" by trial anf error but are the result of a consciously applied design discipline. I want you to raise your quality standards. I mean, if 10 years from now, when you are doing something quick and dirty, you suddenly visualize that I am looking over your shoulders and say to yourself \"Dijkstra would not have liked this\", well, that would be enough immortality for me. -- E. W. Dijkstra\n"}, "2020/05/05": {"quote": " The general principle for complexity design is this: Think locally, act locally. -- Richard P. Gabriel & Ron Goldman, Mob Software: The Erotic Life of Code\n"}, "2020/05/06": {"quote": " Programming is the art of figuring out what you want so precisely that even a machine can do it. -- Some guy who isn't famous\n"}, "2020/05/07": {"quote": " Hence my urgent advice to all of you to reject the morals of the bestseller society and to find, to start with, your reward in your own fun. This is quite feasible, for the challenge of simplification is so fascinating that, if we do our job properly, we shall have the greatest fun in the world. -- E. W. Dijkstra, On the nature of computing science.\n"}, "2020/05/08": {"quote": " Remember: you are alone. Every time you can get help from someone, it is an opportunity: you should eagerly size it. But then, promptly return to normal mode: you are alone and you must be prepared to solve every problem yourself. -- Eric KEDJI\n"}, "2020/05/09": {"quote": " Making All Software Into Tools Reduces Risk. -- smoothspan.com\n"}, "2020/05/10": {"quote": " Some may say Ruby is a bad rip-off of Lisp or Smalltalk, and I admit that. But it is nicer to ordinary people. -- Matz, LL2\n"}, "2020/05/11": {"quote": " C and Lisp stand at opposite ends of the spectrum; they're each great at what the other one sucks at. -- Steve Yegge, Tour de Babel.\n"}, "2020/05/12": {"quote": " Two people should stay together if together they are better people than they would be individually. -- ?\n"}, "2020/05/13": {"quote": " To the optimist, the glass is half full. To the pessimist, the glass is half empty. To the engineer, the glass is twice as big as it needs to be. -- author unknown (quoted in `Robust Systems', Gerald Jay Suseman)\n"}, "2020/05/14": {"quote": " It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration. -- Edsger Dijkstra\n"}, "2020/05/15": {"quote": " Whatever is worth doing at all, is worth doing well. -- Earl of Chesterfield\n"}, "2020/05/16": {"quote": " Rules of Optimization: Rule 1: Don\u2019t do it. Rule 2 (for experts only): Don\u2019t do it yet. -- M.A. Jackson\n"}, "2020/05/17": {"quote": " More computing sins are committed in the name of efficiency (without necessarily achieving it) than for any other single reason - including blind stupidity. -- W.A. Wulf\n"}, "2020/05/18": {"quote": " We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. -- Donald Knuth\n"}, "2020/05/19": {"quote": " The best is the enemy of the good. -- Voltaire\n"}, "2020/05/20": {"quote": " The job of a leader today is not to create followers. It\u2019s to create more leaders. -- Ralph Nader\n"}, "2020/05/21": {"quote": " The president was visiting NASA headquarters and stopped to talk to a man who was holding a mop. \u201cAnd what do you do?\u201d he asked. The man, a janitor, replied, \u201cI\u2019m helping to put a man on the moon, sir.\u201d -- The little book of leadership\n"}, "2020/05/22": {"quote": " Only make new mistakes. -- Phil Dourado\n"}}
